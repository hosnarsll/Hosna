{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nconst App = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const addTodo = e => {\n    e.preventDefault();\n    if (inputValue.trim() === '') {\n      alert('لطفاً یک کار وارد کنید!');\n      return;\n    }\n    setTodos([...todos, {\n      id: Date.now(),\n      text: inputValue,\n      completed: false\n    }]);\n    setInputValue('');\n  };\n  const toggleTodo = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo));\n  };\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n  const countCompletedTodos = () => {\n    return todos.filter(todo => todo.completed).length;\n  };\n};\n/*\r\n  return (\r\n    <div className=\"todo-app\">\r\n      <h1>لیست کارها</h1>\r\n      <form onSubmit={addTodo}>\r\n        <input \r\n          type=\"text\" \r\n          value={inputValue} \r\n          onChange={(e) => setInputValue(e.target.value)} \r\n          placeholder=\"کار جدید...\" \r\n        />\r\n        <button type=\"submit\">اضافه کردن</button>\r\n      </form>\r\n      <div className=\"todo-list\">\r\n        {todos.length === 0 ? (\r\n          <p>هیچ کار اضافه نشده است.</p>\r\n        ) : (\r\n          todos.map(todo => (\r\n            <div key={todo.id} className={todo-item ${todo.completed ? 'completed' : ''}}>\r\n              <span onClick={() => toggleTodo(todo.id)}>{todo.text}</span>\r\n              <button onClick={() => deleteTodo(todo.id)}>حذف</button>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      <div className=\"completed-count\">\r\n        تعداد کارهای انجام شده: {countCompletedTodos()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n*/\n_s(App, \"+Sy7uGGPQnt+jjrIizbpp5oDotQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","_s","todos","setTodos","inputValue","setInputValue","addTodo","e","preventDefault","trim","alert","id","Date","now","text","completed","toggleTodo","map","todo","deleteTodo","filter","countCompletedTodos","length","_c","$RefreshReg$"],"sources":["C:/Users/fanap/hosna/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const addTodo = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim() === '') {\r\n      alert('لطفاً یک کار وارد کنید!');\r\n      return;\r\n    }\r\n    setTodos([...todos, { id: Date.now(), text: inputValue, completed: false }]);\r\n    setInputValue('');\r\n  };\r\n\r\n  const toggleTodo = (id) => {\r\n    setTodos(todos.map(todo => (todo.id === id ? { ...todo, completed: !todo.completed } : todo)));\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    setTodos(todos.filter(todo => todo.id !== id));\r\n  };\r\n\r\n  const countCompletedTodos = () => {\r\n    return todos.filter(todo => todo.completed).length;\r\n  };}\r\n/*\r\n  return (\r\n    <div className=\"todo-app\">\r\n      <h1>لیست کارها</h1>\r\n      <form onSubmit={addTodo}>\r\n        <input \r\n          type=\"text\" \r\n          value={inputValue} \r\n          onChange={(e) => setInputValue(e.target.value)} \r\n          placeholder=\"کار جدید...\" \r\n        />\r\n        <button type=\"submit\">اضافه کردن</button>\r\n      </form>\r\n      <div className=\"todo-list\">\r\n        {todos.length === 0 ? (\r\n          <p>هیچ کار اضافه نشده است.</p>\r\n        ) : (\r\n          todos.map(todo => (\r\n            <div key={todo.id} className={todo-item ${todo.completed ? 'completed' : ''}}>\r\n              <span onClick={() => toggleTodo(todo.id)}>{todo.text}</span>\r\n              <button onClick={() => deleteTodo(todo.id)}>حذف</button>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      <div className=\"completed-count\">\r\n        تعداد کارهای انجام شده: {countCompletedTodos()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n*/\r\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAElB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMO,OAAO,GAAIC,CAAC,IAAK;IACrBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIJ,UAAU,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC5BC,KAAK,CAAC,yBAAyB,CAAC;MAChC;IACF;IACAP,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAES,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAEC,IAAI,EAAEV,UAAU;MAAEW,SAAS,EAAE;IAAM,CAAC,CAAC,CAAC;IAC5EV,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMW,UAAU,GAAIL,EAAE,IAAK;IACzBR,QAAQ,CAACD,KAAK,CAACe,GAAG,CAACC,IAAI,IAAKA,IAAI,CAACP,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGO,IAAI;MAAEH,SAAS,EAAE,CAACG,IAAI,CAACH;IAAU,CAAC,GAAGG,IAAK,CAAC,CAAC;EAChG,CAAC;EAED,MAAMC,UAAU,GAAIR,EAAE,IAAK;IACzBR,QAAQ,CAACD,KAAK,CAACkB,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACP,EAAE,KAAKA,EAAE,CAAC,CAAC;EAChD,CAAC;EAED,MAAMU,mBAAmB,GAAGA,CAAA,KAAM;IAChC,OAAOnB,KAAK,CAACkB,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACH,SAAS,CAAC,CAACO,MAAM;EACpD,CAAC;AAAC,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BArB,EAAA,CAzBMD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAyDT,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}