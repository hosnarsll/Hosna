{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fanap\\\\hosna\\\\src\\\\component\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [task, setTask] = useState('');\n  const handleInputChange = e => {\n    setTask(e.target.value);\n  };\n  const handleAddTask = () => {\n    if (task.trim()) {\n      setTasks([...tasks, task]);\n      setTask('');\n    }\n  };\n  const handleDeleteTask = index => {\n    const newTasks = tasks.filter((_, i) => i !== index);\n    setTasks(newTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"text\",\n      type: \"text\",\n      value: task,\n      onChange: handleInputChange,\n      placeholder: \"Add a new task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"onClick\",\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"ul\",\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"li\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => handleDeleteTask(index),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"pA78OmIk8vrGIGNP3RwLyEUg+ME=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoList","_s","tasks","setTasks","task","setTask","handleInputChange","e","target","value","handleAddTask","trim","handleDeleteTask","index","newTasks","filter","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/fanap/hosna/src/component/TodoList.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TodoList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [task, setTask] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setTask(e.target.value);\r\n  };\r\n\r\n  const handleAddTask = () => {\r\n    if (task.trim()) {\r\n      setTasks([...tasks, task]);\r\n      setTask('');\r\n    }\r\n  };\r\n\r\n  const handleDeleteTask = (index) => {\r\n    const newTasks = tasks.filter((_, i) => i !== index);\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  return (\r\n    <div className='todo'>\r\n      <h1>Todo List</h1>\r\n      <input className='text'\r\n        type=\"text\"\r\n        value={task}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Add a new task\"\r\n       \r\n      />\r\n      <button className='onClick' onClick={handleAddTask}>Add Task</button>\r\n      <ul className='ul'>\r\n        {tasks.map((task, index) => (\r\n          <li className='li' key={index} >\r\n            <span>{task}</span>\r\n            <button className='button' onClick={() => handleDeleteTask(index)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,iBAAiB,GAAIC,CAAC,IAAK;IAC/BF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIN,IAAI,CAACO,IAAI,CAAC,CAAC,EAAE;MACfR,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEE,IAAI,CAAC,CAAC;MAC1BC,OAAO,CAAC,EAAE,CAAC;IACb;EACF,CAAC;EAED,MAAMO,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,QAAQ,GAAGZ,KAAK,CAACa,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKJ,KAAK,CAAC;IACpDV,QAAQ,CAACW,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEf,OAAA;IAAKmB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBpB,OAAA;MAAAoB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBxB,OAAA;MAAOmB,SAAS,EAAC,MAAM;MACrBM,IAAI,EAAC,MAAM;MACXf,KAAK,EAAEL,IAAK;MACZqB,QAAQ,EAAEnB,iBAAkB;MAC5BoB,WAAW,EAAC;IAAgB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE7B,CAAC,eACFxB,OAAA;MAAQmB,SAAS,EAAC,SAAS;MAACS,OAAO,EAAEjB,aAAc;MAAAS,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrExB,OAAA;MAAImB,SAAS,EAAC,IAAI;MAAAC,QAAA,EACfjB,KAAK,CAAC0B,GAAG,CAAC,CAACxB,IAAI,EAAES,KAAK,kBACrBd,OAAA;QAAImB,SAAS,EAAC,IAAI;QAAAC,QAAA,gBAChBpB,OAAA;UAAAoB,QAAA,EAAOf;QAAI;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnBxB,OAAA;UAAQmB,SAAS,EAAC,QAAQ;UAACS,OAAO,EAAEA,CAAA,KAAMf,gBAAgB,CAACC,KAAK,CAAE;UAAAM,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAF5DV,KAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGzB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACtB,EAAA,CAzCID,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}