{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst useValidation = () => {\n  _s();\n  const [errors, setErrors] = useState({});\n  const validateStep = (step, formData) => {\n    let newErrors = {};\n    if (step === 0) {\n      if (!formData.name.trim()) newErrors.name = \"نام را وارد کنید.\";\n      if (!formData.lastName.trim()) newErrors.lastName = \"نام خانوادگی را وارد کنید.\";\n      if (formData.phone.length !== 11) newErrors.phone = \"شماره تماس باید ۱۱ رقم باشد.\";\n      if (!formData.birthDate) newErrors.birthDate = \"تاریخ تولد را وارد کنید.\";\n    }\n    if (step === 1) {\n      if (formData.iban.length !== 24) newErrors.iban = \"شماره شبا باید ۲۴ رقم باشد.\";\n      if (formData.accountNumber.length < 8) newErrors.accountNumber = \"شماره حساب حداقل ۸ رقم باشد.\";\n      if (formData.annualTurnover < 1000000) newErrors.annualTurnover = \"حداقل گردش سالانه باید ۱,۰۰۰,۰۰۰ تومان باشد.\";\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  return {\n    errors,\n    validateStep\n  };\n};\n_s(useValidation, \"o+SUXTQUSJNurFcpxixiLrA9BM0=\");\nexport default useValidation;","map":{"version":3,"names":["useState","useValidation","_s","errors","setErrors","validateStep","step","formData","newErrors","name","trim","lastName","phone","length","birthDate","iban","accountNumber","annualTurnover","Object","keys"],"sources":["C:/Users/fanap/hosna/src/component/bank/UseValidation.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useValidation = () => {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateStep = (step, formData) => {\r\n    let newErrors = {};\r\n\r\n    if (step === 0) {\r\n      if (!formData.name.trim()) newErrors.name = \"نام را وارد کنید.\";\r\n      if (!formData.lastName.trim()) newErrors.lastName = \"نام خانوادگی را وارد کنید.\";\r\n      if (formData.phone.length !== 11) newErrors.phone = \"شماره تماس باید ۱۱ رقم باشد.\";\r\n      if (!formData.birthDate) newErrors.birthDate = \"تاریخ تولد را وارد کنید.\";\r\n    }\r\n\r\n    if (step === 1) {\r\n      if (formData.iban.length !== 24) newErrors.iban = \"شماره شبا باید ۲۴ رقم باشد.\";\r\n      if (formData.accountNumber.length < 8) newErrors.accountNumber = \"شماره حساب حداقل ۸ رقم باشد.\";\r\n      if (formData.annualTurnover < 1000000) newErrors.annualTurnover = \"حداقل گردش سالانه باید ۱,۰۰۰,۰۰۰ تومان باشد.\";\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  return { errors, validateStep };\r\n};\r\n\r\nexport default useValidation;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExC,MAAMK,YAAY,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK;IACvC,IAAIC,SAAS,GAAG,CAAC,CAAC;IAElB,IAAIF,IAAI,KAAK,CAAC,EAAE;MACd,IAAI,CAACC,QAAQ,CAACE,IAAI,CAACC,IAAI,CAAC,CAAC,EAAEF,SAAS,CAACC,IAAI,GAAG,mBAAmB;MAC/D,IAAI,CAACF,QAAQ,CAACI,QAAQ,CAACD,IAAI,CAAC,CAAC,EAAEF,SAAS,CAACG,QAAQ,GAAG,4BAA4B;MAChF,IAAIJ,QAAQ,CAACK,KAAK,CAACC,MAAM,KAAK,EAAE,EAAEL,SAAS,CAACI,KAAK,GAAG,8BAA8B;MAClF,IAAI,CAACL,QAAQ,CAACO,SAAS,EAAEN,SAAS,CAACM,SAAS,GAAG,0BAA0B;IAC3E;IAEA,IAAIR,IAAI,KAAK,CAAC,EAAE;MACd,IAAIC,QAAQ,CAACQ,IAAI,CAACF,MAAM,KAAK,EAAE,EAAEL,SAAS,CAACO,IAAI,GAAG,6BAA6B;MAC/E,IAAIR,QAAQ,CAACS,aAAa,CAACH,MAAM,GAAG,CAAC,EAAEL,SAAS,CAACQ,aAAa,GAAG,8BAA8B;MAC/F,IAAIT,QAAQ,CAACU,cAAc,GAAG,OAAO,EAAET,SAAS,CAACS,cAAc,GAAG,8CAA8C;IAClH;IAEAb,SAAS,CAACI,SAAS,CAAC;IACpB,OAAOU,MAAM,CAACC,IAAI,CAACX,SAAS,CAAC,CAACK,MAAM,KAAK,CAAC;EAC5C,CAAC;EAED,OAAO;IAAEV,MAAM;IAAEE;EAAa,CAAC;AACjC,CAAC;AAACH,EAAA,CAxBID,aAAa;AA0BnB,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}