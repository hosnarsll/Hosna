{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fanap\\\\hosna\\\\src\\\\component\\\\TodoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [task, setTask] = useState('');\n  const handleInputChange = e => {\n    setTask(e.target.value);\n  };\n  const handleAddTask = () => {\n    if (task.trim()) {\n      setTasks([...tasks, task]);\n      setTask('');\n    }\n  };\n  const handleDeleteTask = index => {\n    const newTasks = tasks.filter((_, i) => i !== index);\n    setTasks(newTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: task,\n      onChange: handleInputChange,\n      placeholder: \"\\uD83D\\uDCC4\",\n      style: {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"\\u2795\",\n      onClick: handleAddTask,\n      children: \"\\u2795\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: 'none',\n        padding: '0'\n      },\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"\\u2716\\uFE0F\",\n          onClick: () => handleDeleteTask(index),\n          children: \"\\u2716\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"pA78OmIk8vrGIGNP3RwLyEUg+ME=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoList","_s","tasks","setTasks","task","setTask","handleInputChange","e","target","value","handleAddTask","trim","handleDeleteTask","index","newTasks","filter","_","i","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","style","className","onClick","listStyleType","padding","map","_c","$RefreshReg$"],"sources":["C:/Users/fanap/hosna/src/component/TodoList.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TodoList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [task, setTask] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setTask(e.target.value);\r\n  };\r\n\r\n  const handleAddTask = () => {\r\n    if (task.trim()) {\r\n      setTasks([...tasks, task]);\r\n      setTask('');\r\n    }\r\n  };\r\n\r\n  const handleDeleteTask = (index) => {\r\n    const newTasks = tasks.filter((_, i) => i !== index);\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  return (\r\n    <div >\r\n      <h1>Todo List</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={task}\r\n        onChange={handleInputChange}\r\n        placeholder=\"üìÑ\"\r\n        style={{ }}\r\n      />\r\n      <button className='‚ûï' onClick={handleAddTask}>‚ûï</button>\r\n      <ul style={{ listStyleType: 'none', padding: '0' }}>\r\n        {tasks.map((task, index) => (\r\n          <li key={index} >\r\n            <span>{task}</span>\r\n            <button className='‚úñÔ∏è' onClick={() => handleDeleteTask(index)}>‚úñÔ∏è</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,iBAAiB,GAAIC,CAAC,IAAK;IAC/BF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIN,IAAI,CAACO,IAAI,CAAC,CAAC,EAAE;MACfR,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEE,IAAI,CAAC,CAAC;MAC1BC,OAAO,CAAC,EAAE,CAAC;IACb;EACF,CAAC;EAED,MAAMO,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,QAAQ,GAAGZ,KAAK,CAACa,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKJ,KAAK,CAAC;IACpDV,QAAQ,CAACW,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEf,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBvB,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXd,KAAK,EAAEL,IAAK;MACZoB,QAAQ,EAAElB,iBAAkB;MAC5BmB,WAAW,EAAC,cAAI;MAChBC,KAAK,EAAE,CAAE;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACFvB,OAAA;MAAQ4B,SAAS,EAAC,QAAG;MAACC,OAAO,EAAElB,aAAc;MAAAQ,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxDvB,OAAA;MAAI2B,KAAK,EAAE;QAAEG,aAAa,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAI,CAAE;MAAAZ,QAAA,EAChDhB,KAAK,CAAC6B,GAAG,CAAC,CAAC3B,IAAI,EAAES,KAAK,kBACrBd,OAAA;QAAAmB,QAAA,gBACEnB,OAAA;UAAAmB,QAAA,EAAOd;QAAI;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnBvB,OAAA;UAAQ4B,SAAS,EAAC,cAAI;UAACC,OAAO,EAAEA,CAAA,KAAMhB,gBAAgB,CAACC,KAAK,CAAE;UAAAK,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFnET,KAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACrB,EAAA,CAzCID,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}